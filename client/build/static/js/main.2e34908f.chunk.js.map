{"version":3,"sources":["actions/index.js","actions/types.js","components/Stripe.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","async","axios","get","res","type","payload","data","handleToken","token","post","Stripe","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","console","log","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"8YAGaA,EAAY,kBAAM,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACXE,IAAMC,IAAI,sBADC,OACvBC,EADuB,OAE5BL,EAAS,CAACM,KCLa,aDKKC,QAAQF,EAAIG,OAFZ,uCAKlBC,EAAc,SAACC,GAAD,OAAW,SAAMV,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACnBE,IAAMQ,KAAK,cAAeD,IADP,OAC/BL,EAD+B,OAGrCL,EAAS,CAAEM,KCXc,aDWIC,QAASF,EAAIG,OAHL,uC,iBEHhCI,E,iLACI,IAAD,OAGP,OACE,kBAAC,IAAD,CACCC,KAAK,aACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,8CAEV,4BAAQC,UAAU,OAAlB,oB,GAZeC,aAqBNC,cAAQ,KAAMC,EAAdD,CAAuBT,GCrBhCW,E,wLAEJ,OAAQC,KAAKR,MAAMS,MAClB,KAAK,KACJ,OACD,KAAK,EACJ,OACE,4BAAI,uBAAGC,KAAK,gBAAR,uBAEP,QACC,MAAO,CACP,wBAAIC,IAAI,KAAI,kBAAC,EAAD,OACZ,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,YACWL,KAAKR,MAAMS,KAAKK,SAE3B,wBAAIH,IAAI,KAAI,uBAAGD,KAAK,eAAR,gB,+BAOd,OACA,6BACC,yBAAKP,UAAU,eACd,kBAAC,IAAD,CACCY,GAAIP,KAAKR,MAAMS,KAAO,WAAa,IACnCN,UAAU,mBAFX,cAMA,wBAAIA,UAAU,SACZK,KAAKQ,uB,GAhCUZ,aA4CNC,mBAJf,YACC,MAAO,CAACI,KADwB,EAAPA,QAIXJ,CAAyBE,GCpCzBU,EAXC,WACf,OACC,yBAAKL,MAAO,CAAEM,UAAU,WACvB,2CADD,qCCGIC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,0CAGlBC,E,4LAEJb,KAAKR,MAAMjB,c,+BAGX,OACC,yBAAKoB,UAAU,aACd,kBAAC,IAAD,KACC,6BACC,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmB,OAAO,EAAMC,KAAK,IAAIC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAO,EAAMC,KAAK,WAAWC,UAAWL,IAC/C,kBAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,W,GAZ1BhB,aAoBHC,cAAQ,KAAKC,EAAbD,CAAsBgB,GC5BtBI,cAAgB,CAC9BhB,KCFc,WAAgC,IAAvBiB,EAAsB,uDAAd,KAAMC,EAAQ,uCAE7C,OADAC,QAAQC,IAAIF,GACJA,EAAOrC,MACd,INLwB,aMMvB,OAAOqC,EAAOpC,UAAW,EAC1B,QACC,OAAOmC,MCEJI,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACR,kBAAC,IAAD,CAAUN,MAAOA,GAAO,kBAAC,EAAD,OACxBO,SAASC,cAAc,Y","file":"static/js/main.2e34908f.chunk.js","sourcesContent":["import axios from 'axios';\nimport { FETCH_USER} from './types';\n\nexport const fetchUser = () => async dispatch => {\n\t\tconst res = await axios.get('/api/current_user')\n\t\t\tdispatch({type: FETCH_USER, payload:res.data});\n};\n\nexport const handleToken = (token) => async dispatch => {\n\tconst res = await axios.post('/api/stripe', token);\n\n\tdispatch({ type: FETCH_USER, payload: res.data});\n};\n","export const FETCH_USER = 'fetch_user';\n","import React, {Component} from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport {connect} from 'react-redux';\nimport * as actions from '../actions';\n\nclass Stripe extends Component{\n\trender(){\n\t\t\n\n\t\treturn (\n\t\t\t\t<StripeCheckout\n\t\t\t\t\tname=\"Prospector\"\n\t\t\t\t\tdescription=\"$5 for 5 email credits\"\n\t\t\t\t\tamount={500}\n\t\t\t\t\ttoken={token => this.props.handleToken(token)}\n\t\t\t\t\tstripeKey={process.env.REACT_APP_STRIPE_KEY}\n\t\t\t\t >\n\t\t\t\t \t<button className=\"btn\">\n\t\t\t\t \t\tAdd credits\n\t\t\t\t \t</button>\n\t\t\t\t </StripeCheckout>\n\t\t\t);\n\t}\n\n}\n\nexport default connect(null, actions)(Stripe);","import React, {Component } from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Stripe from './Stripe';\n\nclass Header extends Component { \n\trenderContent() {\n\t\tswitch (this.props.auth) {\n\t\t\tcase null:\n\t\t\t\treturn;\n\t\t\tcase false:\n\t\t\t\treturn (\n\t\t\t\t\t\t<li><a href=\"/auth/google\"> Login With Google</a></li>\n\t\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn [\n\t\t\t\t<li key=\"1\"><Stripe /></li>,\n\t\t\t\t<li key=\"3\" style={{ margin: '0 10px'}}>\n\t\t\t\t\tCredits: {this.props.auth.credits}\n\t\t\t\t</li>,\n\t\t\t\t<li key=\"2\"><a href=\"/api/logout\">Log Out</a></li>\n\t\t\t\t];\n\t\t}\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t<nav>\n\t\t\t<div className=\"nav-wrapper\">\n\t\t\t\t<Link\n\t\t\t\t to={this.props.auth ? '/surveys' : '/'} \n\t\t\t\t className=\"left brand-logo\"\n\t\t\t\t >\n\t\t\t\t\tProspector\n\t\t\t\t</Link>\n\t\t\t\t<ul className=\"right\">\n\t\t\t\t\t{this.renderContent()}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps({auth}) {\n\treturn {auth};\n}\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\nconst Landing = () => {\n\treturn (\n\t\t<div style={{ textAlign:'center' }}>\n\t\t\t<h1>\n\t\t\t\tProspector!\n\t\t\t</h1>\n\t\t\tCollect feedback from your users\n\t\t</div>\n\t);\n};\n\nexport default Landing;","import React, {Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actions from '../actions';\n\nimport Header from './Header';\nimport Landing from './Landing';\nconst Dashboard = () => <h2>Dashboard</h2>;\nconst SurveyNew = () => <h2>SurveyNew</h2>;\n\n\nclass App extends Component{\n\tcomponentDidMount(){\n\t\tthis.props.fetchUser();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<Route exact={true} path=\"/\" component={Landing} />\n\t\t\t\t\t\t<Route exact={true} path=\"/surveys\" component={Dashboard} />\n\t\t\t\t\t\t<Route path=\"/surveys/new\" component={SurveyNew} />\n\t\t\t\t\t</div>\n\t\t\t\t</BrowserRouter>\n\t\t\t</div>\n\t\t);\n\t}\t\n}\n\nexport default connect(null,actions)(App);","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n\tauth: authReducer\n});","import {FETCH_USER} from '../actions/types';\n\nexport default function(state = null, action) {\n\tconsole.log(action);\n\tswitch (action.type) {\n\t\tcase FETCH_USER:\n\t\t\treturn action.payload || false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import 'materialize-css/dist/css/materialize.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n\t<Provider store={store}><App  /></Provider>,\t//updates all components with a new state when it becomes available\n\tdocument.querySelector('#root')\n);\n"],"sourceRoot":""}